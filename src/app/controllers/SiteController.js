const axios = require('axios');
const { JSDOM } = require('jsdom');

class SiteController {
  async index(req, res, next) {
    try {
      console.log('üîÑ B·∫Øt ƒë·∫ßu l·∫•y d·ªØ li·ªáu t·ª´ Quang Binh Travel...');
      
      // Thi·∫øt l·∫≠p timeout cho axios
      const axiosConfig = {
        timeout: 15000, // 15 gi√¢y timeout
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
      };
      
      // Gi·∫£m s·ªë l∆∞·ª£ng trang ƒë·ªÉ t·∫£i nhanh h∆°n
      const maxPages = 3;
      const promises = Array.from({ length: maxPages }, async (_, i) => {
        const page = i + 1;
        console.log(`üì• ƒêang l·∫•y d·ªØ li·ªáu trang ${page}...`);
        try {
          const url = `https://quangbinhtravel.vn/tin-tuc/goc-bao-chi/page/${page}`;
          const response = await axios.get(url, axiosConfig);
          const html = response.data;
          const dom = new JSDOM(html);
          const document = dom.window.document;
          
          // L·∫•y c√°c b√†i ƒëƒÉng (ph√¢n t√≠ch t·ª´ HTML m·ªõi)
          const articles = document.querySelectorAll('.post, .experience_item');
          
          if (articles.length === 0) {
            console.log(`‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt tr√™n trang ${page}, c√≥ th·ªÉ ƒë√£ h·∫øt d·ªØ li·ªáu.`);
            return [];
          }
          
          // X·ª≠ l√Ω t·ªëi ƒëa 10 b√†i vi·∫øt m·ªói trang ƒë·ªÉ gi·∫£m th·ªùi gian
          const maxArticlesPerPage = 10;
          const limitedArticles = Array.from(articles).slice(0, maxArticlesPerPage);
          
          return limitedArticles.map((article) => {
            try {
              // Qu√©t to√†n b·ªô c·∫•u tr√∫c HTML ƒë·ªÉ t√¨m c√°c th√†nh ph·∫ßn c·∫ßn thi·∫øt
              console.log(`ƒêang x·ª≠ l√Ω b√†i vi·∫øt...`);
              
              // L·∫•y ti√™u ƒë·ªÅ t·ª´ th·∫ª h3 > a
              let title = 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ';
              let linkUrl = '#';
              
              // T√¨m th·∫ª h3 trong post_box
              const titleElement = article.querySelector('h3.cl-text.title.fw-6.title-m');
              if (titleElement) {
                // L·∫•y ti√™u ƒë·ªÅ t·ª´ n·ªôi dung vƒÉn b·∫£n c·ªßa h3
                title = titleElement.textContent.trim();
                
                // T√¨m th·∫ª a trong h3 ƒë·ªÉ l·∫•y URL
                const linkElement = titleElement.querySelector('a');
                if (linkElement) {
                  linkUrl = linkElement.getAttribute('href');
                }
              } else {
                // Th·ª≠ t√¨m th·∫ª a v·ªõi class post_img
                const imgLinkElement = article.querySelector('a.post_img');
                if (imgLinkElement) {
                  linkUrl = imgLinkElement.getAttribute('href');
                  // N·∫øu kh√¥ng t√¨m th·∫•y ti√™u ƒë·ªÅ t·ª´ h3, th·ª≠ l·∫•y t·ª´ alt c·ªßa h√¨nh ·∫£nh
                  const imgElement = imgLinkElement.querySelector('img');
                  if (imgElement && imgElement.getAttribute('alt')) {
                    title = imgElement.getAttribute('alt');
                  }
                }
              }
              
              // L·∫•y URL h√¨nh ·∫£nh
              let imageUrl = null;
              const imgTag = article.querySelector('img');
              if (imgTag) {
                imageUrl = imgTag.getAttribute('src');
              }
              
              // L·∫•y ng√†y ƒëƒÉng
              let publishDate = 'Kh√¥ng c√≥ ng√†y';
              const dateTag = article.querySelector('.note-text.cl-text3');
              if (dateTag) {
                publishDate = dateTag.textContent.trim();
              }
              
              // L·∫•y n·ªôi dung t√≥m t·∫Øt
              let content = 'Kh√¥ng c√≥ n·ªôi dung';
              const contentTag = article.querySelector('.note-text.cl-gray3.content');
              if (contentTag) {
                content = contentTag.textContent.trim();
              }
              
              // L·∫•y t√°c gi·∫£/ngu·ªìn
              let author = 'Quang Binh Travel';
              const authorTag = article.querySelector('.note-text.cl-text.fw-6');
              if (authorTag) {
                author = authorTag.textContent.trim();
              }
              
              // Debug log
              console.log(`Ti√™u ƒë·ªÅ: "${title}"`);
              console.log(`Link: ${linkUrl}`);
              console.log(`·∫¢nh: ${imageUrl}`);
              
              return {
                imageUrl,
                title,
                link: linkUrl,
                date: publishDate,
                content: content.substring(0, 200) + (content.length > 200 ? '...' : ''),
                author,
                page
              };
            } catch (err) {
              console.error(`‚ùå L·ªói x·ª≠ l√Ω b√†i vi·∫øt tr√™n trang ${page}:`, err);
              return null;
            }
          }).filter(Boolean);
        } catch (error) {
          console.error(`‚ùå L·ªói khi l·∫•y d·ªØ li·ªáu trang ${page}:`, error.message);
          return [];
        }
      });
      
      // Th√™m timeout t·ªïng th·ªÉ cho to√†n b·ªô Promise.all
      const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => reject(new Error('Request timeout after 30 seconds')), 30000);
      });
      
      // K·∫øt h·ª£p timeout v·ªõi promises th·ª±c t·∫ø
      const allPosts = (await Promise.race([
        Promise.all(promises),
        timeoutPromise
      ])).flat();
      
      console.log(`‚úÖ L·∫•y xong ${allPosts.length} b√†i vi·∫øt t·ª´ Quang Binh Travel!`);
      
      // Ki·ªÉm tra v√† log xem c√≥ b√†i vi·∫øt n√†o kh√¥ng c√≥ ti√™u ƒë·ªÅ kh√¥ng
      const postsWithNoTitle = allPosts.filter(post => post.title === 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ');
      if (postsWithNoTitle.length > 0) {
        console.log(`‚ö†Ô∏è C√≥ ${postsWithNoTitle.length} b√†i vi·∫øt kh√¥ng l·∫•y ƒë∆∞·ª£c ti√™u ƒë·ªÅ`);
      }
      
      res.render('home', { 
        posts: allPosts,
        title: 'Tin t·ª©c Quang B√¨nh Travel',
        error: null
      });
    } catch (error) {
      console.error('‚ùå L·ªói khi t·∫£i d·ªØ li·ªáu:', error.message);
      // Hi·ªÉn th·ªã trang d√π c√≥ l·ªói, c√≥ th·ªÉ hi·ªÉn th·ªã th√¥ng b√°o l·ªói
      res.render('home', { 
        posts: [],
        title: 'Tin t·ª©c Quang B√¨nh Travel',
        error: 'ƒê√£ x·∫£y ra l·ªói khi t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i sau.'
      });
    }
  }
  
  // Th√™m ph∆∞∆°ng th·ª©c ƒë·ªÉ xem chi ti·∫øt b√†i vi·∫øt n·∫øu c·∫ßn
  async viewDetail(req, res, next) {
    try {
      const url = req.params.url || '';
      if (!url) {
        return res.redirect('/');
      }
      
      // Ki·ªÉm tra xem URL ƒë√£ c√≥ ƒë·∫ßy ƒë·ªß domain ch∆∞a
      const fullUrl = url.startsWith('http') ? url : `https://quangbinhtravel.vn/${url}`;
      
      console.log(`ƒêang t·∫£i chi ti·∫øt b√†i vi·∫øt: ${fullUrl}`);
      
      const response = await axios.get(fullUrl, {
        timeout: 15000,
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
      });
      
      const html = response.data;
      const dom = new JSDOM(html);
      const document = dom.window.document;
      
      // L·∫•y chi ti·∫øt b√†i vi·∫øt
      let title = 'Chi ti·∫øt b√†i vi·∫øt';
      const titleElement = document.querySelector('h3.cl-text.title.fw-6.title-m');
      if (titleElement) {
        title = titleElement.textContent.trim();
      }
      
      let content = 'Kh√¥ng c√≥ n·ªôi dung';
      const contentElement = document.querySelector('.note-text.cl-gray3.content, .post_content');
      if (contentElement) {
        content = contentElement.innerHTML;
      }
      
      let date = '';
      const dateElement = document.querySelector('.note-text.cl-text3');
      if (dateElement) {
        date = dateElement.textContent.trim();
      }
      
      let author = 'Quang Binh Travel';
      const authorElement = document.querySelector('.note-text.cl-text.fw-6');
      if (authorElement) {
        author = authorElement.textContent.trim();
      }
      
      // L·∫•y c√°c h√¨nh ·∫£nh trong b√†i vi·∫øt
      const images = Array.from(document.querySelectorAll('.post_content img, .post_lf--wrap img')).map(img => img.src);
      
      console.log(`ƒê√£ t·∫£i chi ti·∫øt b√†i vi·∫øt: ${title}`);
      
      res.render('detail', {
        title,
        content,
        date,
        author,
        images,
        url: fullUrl
      });
    } catch (error) {
      console.error('‚ùå L·ªói khi t·∫£i chi ti·∫øt b√†i vi·∫øt:', error.message);
      res.render('detail', {
        title: 'Kh√¥ng th·ªÉ t·∫£i b√†i vi·∫øt',
        content: 'ƒê√£ x·∫£y ra l·ªói khi t·∫£i n·ªôi dung b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau.',
        date: '',
        author: '',
        images: [],
        url: req.params.url || ''
      });
    }
  }
}

module.exports = new SiteController();
